{"ast":null,"code":"import { ITodoActionsTypes } from \"../../types/types\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { TodoApi } from \"../../api\";\nfunction* sagaCreateTodo(action) {\n  try {\n    const todoObject = {\n      title: action.payload,\n      done: false\n    };\n    const todo = yield call(TodoApi.createTodo, todoObject);\n    yield put({\n      type: ITodoActionsTypes.CREATE_TODO_SUCCESS,\n      payload: todo\n    });\n  } catch (error) {\n    console.log('error', error);\n  }\n}\nfunction* sagaDeleteTodo(action) {\n  try {\n    const todos = yield call(TodoApi.deleteTodo, action.payload);\n    yield put({\n      type: ITodoActionsTypes.DELETE_TODO_SUCCESS,\n      payload: todos\n    });\n  } catch (error) {\n    console.log('error', error);\n  }\n}\nfunction* sagaGetTodos() {\n  try {\n    const todo = yield call(TodoApi.getTodos);\n    yield put({\n      type: ITodoActionsTypes.GET_TODOS_SUCCESS,\n      payload: todo\n    });\n  } catch (error) {\n    console.log('error', error);\n  }\n}\nfunction* sagaCompleteTodos(action) {\n  try {\n    const todo = yield call(TodoApi.getTodos);\n    yield put({\n      type: ITodoActionsTypes.GET_TODOS_SUCCESS,\n      payload: todo\n    });\n  } catch (error) {\n    console.log('error', error);\n  }\n}\nexport function* sagaWatcher() {\n  yield takeEvery(ITodoActionsTypes.CREATE_TODO, sagaCreateTodo);\n  yield takeEvery(ITodoActionsTypes.DELETE_TODO, sagaDeleteTodo);\n  yield takeEvery(ITodoActionsTypes.GET_TODOS, sagaGetTodos);\n}","map":{"version":3,"names":["ITodoActionsTypes","call","put","takeEvery","TodoApi","sagaCreateTodo","action","todoObject","title","payload","done","todo","createTodo","type","CREATE_TODO_SUCCESS","error","console","log","sagaDeleteTodo","todos","deleteTodo","DELETE_TODO_SUCCESS","sagaGetTodos","getTodos","GET_TODOS_SUCCESS","sagaCompleteTodos","sagaWatcher","CREATE_TODO","DELETE_TODO","GET_TODOS"],"sources":["E:/bem/client/todo/src/redux/saga/sagas.ts"],"sourcesContent":["import {ICompleteAction, ICreateAction, IDeleteAction, ITodo, ITodoActionsTypes} from \"../../types/types\";\r\nimport {call, Effect, put, takeEvery} from \"redux-saga/effects\";\r\nimport {TodoApi} from \"../../api\";\r\n\r\nfunction* sagaCreateTodo(action: ICreateAction): Generator<Effect, void> {\r\n    try {\r\n        const todoObject: Partial<ITodo> = {\r\n            title: action.payload,\r\n            done: false\r\n        }\r\n        const todo = yield call(TodoApi.createTodo, todoObject)\r\n\r\n        yield put({ type: ITodoActionsTypes.CREATE_TODO_SUCCESS, payload: todo})\r\n    } catch (error) {\r\n        console.log('error', error)\r\n    }\r\n}\r\n\r\nfunction* sagaDeleteTodo(action: IDeleteAction): Generator<Effect, void> {\r\n    try {\r\n        const todos = yield call(TodoApi.deleteTodo, action.payload)\r\n\r\n        yield put({ type: ITodoActionsTypes.DELETE_TODO_SUCCESS, payload: todos})\r\n    } catch (error) {\r\n        console.log('error', error)\r\n    }\r\n}\r\nfunction* sagaGetTodos(): Generator<Effect, void, ITodo[]> {\r\n    try {\r\n        const todo = yield call(TodoApi.getTodos)\r\n\r\n        yield put({ type: ITodoActionsTypes.GET_TODOS_SUCCESS, payload: todo})\r\n    } catch (error) {\r\n        console.log('error', error)\r\n    }\r\n}\r\nfunction* sagaCompleteTodos(action: ICompleteAction<ITodo>): Generator<Effect, void, ITodo[]> {\r\n    try {\r\n        const todo = yield call(TodoApi.getTodos)\r\n\r\n        yield put({ type: ITodoActionsTypes.GET_TODOS_SUCCESS, payload: todo})\r\n    } catch (error) {\r\n        console.log('error', error)\r\n    }\r\n}\r\n\r\nexport function* sagaWatcher(): Generator<Effect, void> {\r\n    yield takeEvery(ITodoActionsTypes.CREATE_TODO, sagaCreateTodo)\r\n    yield takeEvery(ITodoActionsTypes.DELETE_TODO, sagaDeleteTodo)\r\n    yield takeEvery(ITodoActionsTypes.GET_TODOS, sagaGetTodos)\r\n}"],"mappings":"AAAA,SAA8DA,iBAAiB,QAAO,mBAAmB;AACzG,SAAQC,IAAI,EAAUC,GAAG,EAAEC,SAAS,QAAO,oBAAoB;AAC/D,SAAQC,OAAO,QAAO,WAAW;AAEjC,UAAUC,cAAcA,CAACC,MAAqB,EAA2B;EACrE,IAAI;IACA,MAAMC,UAA0B,GAAG;MAC/BC,KAAK,EAAEF,MAAM,CAACG,OAAO;MACrBC,IAAI,EAAE;IACV,CAAC;IACD,MAAMC,IAAI,GAAG,MAAMV,IAAI,CAACG,OAAO,CAACQ,UAAU,EAAEL,UAAU,CAAC;IAEvD,MAAML,GAAG,CAAC;MAAEW,IAAI,EAAEb,iBAAiB,CAACc,mBAAmB;MAAEL,OAAO,EAAEE;IAAI,CAAC,CAAC;EAC5E,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;EAC/B;AACJ;AAEA,UAAUG,cAAcA,CAACZ,MAAqB,EAA2B;EACrE,IAAI;IACA,MAAMa,KAAK,GAAG,MAAMlB,IAAI,CAACG,OAAO,CAACgB,UAAU,EAAEd,MAAM,CAACG,OAAO,CAAC;IAE5D,MAAMP,GAAG,CAAC;MAAEW,IAAI,EAAEb,iBAAiB,CAACqB,mBAAmB;MAAEZ,OAAO,EAAEU;IAAK,CAAC,CAAC;EAC7E,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;EAC/B;AACJ;AACA,UAAUO,YAAYA,CAAA,EAAqC;EACvD,IAAI;IACA,MAAMX,IAAI,GAAG,MAAMV,IAAI,CAACG,OAAO,CAACmB,QAAQ,CAAC;IAEzC,MAAMrB,GAAG,CAAC;MAAEW,IAAI,EAAEb,iBAAiB,CAACwB,iBAAiB;MAAEf,OAAO,EAAEE;IAAI,CAAC,CAAC;EAC1E,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;EAC/B;AACJ;AACA,UAAUU,iBAAiBA,CAACnB,MAA8B,EAAoC;EAC1F,IAAI;IACA,MAAMK,IAAI,GAAG,MAAMV,IAAI,CAACG,OAAO,CAACmB,QAAQ,CAAC;IAEzC,MAAMrB,GAAG,CAAC;MAAEW,IAAI,EAAEb,iBAAiB,CAACwB,iBAAiB;MAAEf,OAAO,EAAEE;IAAI,CAAC,CAAC;EAC1E,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;EAC/B;AACJ;AAEA,OAAO,UAAUW,WAAWA,CAAA,EAA4B;EACpD,MAAMvB,SAAS,CAACH,iBAAiB,CAAC2B,WAAW,EAAEtB,cAAc,CAAC;EAC9D,MAAMF,SAAS,CAACH,iBAAiB,CAAC4B,WAAW,EAAEV,cAAc,CAAC;EAC9D,MAAMf,SAAS,CAACH,iBAAiB,CAAC6B,SAAS,EAAEP,YAAY,CAAC;AAC9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}