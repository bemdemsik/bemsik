{"ast":null,"code":"var _jsxFileName = \"E:\\\\bem\\\\client\\\\todo\\\\src\\\\components\\\\TodoItem\\\\TodoItem.tsx\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoItem = ({\n  todo,\n  deleteTodo,\n  doneTodo,\n  changeTodo\n}) => {\n  _s();\n  const [isTodoEdit, setIsTodoEdit] = useState(false);\n  const [newTitle, setNewTitle] = useState('');\n  const handleSubmit = event => {\n    if (event.key === 'Enter') {\n      changeTodo(newTitle, todo.done, todo.id);\n      setIsTodoEdit(!isTodoEdit);\n    }\n  };\n  const handleTodoEdit = () => setIsTodoEdit(!isTodoEdit);\n  const handleTitleChange = event => {\n    setNewTitle(event.target.value);\n  };\n  const handleDelete = () => deleteTodo(todo.id);\n  const handleComplete = () => doneTodo(todo.id, !todo.done);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `todo-item list-group-item d-flex justify-content-between align-items-center\n            ${todo.done ? 'list-group-item-success' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onKeyPress: handleSubmit,\n      children: isTodoEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${todo.done ? 'title-done' : ''}`,\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTodoEdit,\n        className: \"btn btn-primary\",\n        style: {\n          marginRight: '10px'\n        },\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleComplete,\n        className: \"btn btn-success\",\n        style: {\n          marginRight: '10px'\n        },\n        children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        className: \"btn btn-danger\",\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoItem, \"mGI+/6zm3HJrTyyOQZzLv7YUTS8=\");\n_c = TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoItem","todo","deleteTodo","doneTodo","changeTodo","_s","isTodoEdit","setIsTodoEdit","newTitle","setNewTitle","handleSubmit","event","key","done","id","handleTodoEdit","handleTitleChange","target","value","handleDelete","handleComplete","className","children","onKeyPress","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","style","marginRight","_c","$RefreshReg$"],"sources":["E:/bem/client/todo/src/components/TodoItem/TodoItem.tsx"],"sourcesContent":["import {ITodo} from \"../../types/types\";\r\nimport './styles.css'\r\nimport React, {ChangeEvent, useState} from \"react\";\r\ninterface ITodoProps {\r\n    todo: ITodo;\r\n    deleteTodo: (arg0: string) => void;\r\n    doneTodo: (arg0: string, arg1: boolean) => void;\r\n    changeTodo: (arg0: string, arg1: boolean, arg2: string) => void;\r\n}\r\nexport const TodoItem = ({ todo, deleteTodo, doneTodo, changeTodo }: ITodoProps) => {\r\n    const [isTodoEdit, setIsTodoEdit] = useState(false)\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const handleSubmit = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n         if(event.key === 'Enter'){\r\n             changeTodo(newTitle, todo.done, todo.id)\r\n             setIsTodoEdit(!isTodoEdit)\r\n         }\r\n    }\r\n    const handleTodoEdit = () => setIsTodoEdit(!isTodoEdit)\r\n    const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {setNewTitle(event.target.value)}\r\n    const handleDelete = () => deleteTodo(todo.id)\r\n    const handleComplete = () => doneTodo(todo.id, !todo.done)\r\n    return (\r\n        <li className={\r\n            `todo-item list-group-item d-flex justify-content-between align-items-center\r\n            ${todo.done ?  'list-group-item-success' : '' }`\r\n        }>\r\n            <div\r\n                onKeyPress={handleSubmit}>\r\n                {isTodoEdit\r\n                    ? <input type='text' onChange={handleTitleChange}/>\r\n                    : <span className={`${todo.done ? 'title-done' : ''}`}>{todo.title}</span>\r\n                }\r\n            </div>\r\n            <div className=\"\">\r\n                <button onClick={handleTodoEdit} className=\"btn btn-primary\" style={{marginRight: '10px'}}>Изменить</button>\r\n                <button onClick={handleComplete} className=\"btn btn-success\" style={{marginRight: '10px'}}>Завершить</button>\r\n                <button onClick={handleDelete} className=\"btn btn-danger\">Удалить</button>\r\n            </div>\r\n        </li>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}