{"ast":null,"code":"var _jsxFileName = \"E:\\\\bem\\\\bemsik\\\\client\\\\todo\\\\src\\\\components\\\\todos\\\\TodoForm\\\\TodoForm.tsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from 'react';\nimport { createTodo, getTodos, showAlert } from '../../../redux/Actions';\nimport { Alert } from \"../Alert/alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoForm = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n  const alertState = useSelector(state => state.alertReducer);\n  useEffect(() => {\n    dispatch(getTodos());\n  });\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!title.trim()) {\n      dispatch(showAlert('Название дела не может быть пустым', 'warning'));\n      return;\n    }\n    dispatch(createTodo(title));\n    setTitle(\"\");\n  };\n  const handleChangeInputValue = event => {\n    setTitle(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [alertState.alertText.length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      props: alertState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 d-flex align-items-end justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          width: '80%',\n          marginRight: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          className: \"form-label\",\n          children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0434\\u0435\\u043B\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChangeInputValue,\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"pt-3\",\n      children: \"\\u041D\\u043E\\u0432\\u044B\\u0435 \\u0434\\u0435\\u043B\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoForm, \"a6G1MG1UO2ztVpqEJbOwvg5oleE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useDispatch","useSelector","useEffect","useState","createTodo","getTodos","showAlert","Alert","jsxDEV","_jsxDEV","TodoForm","_s","title","setTitle","dispatch","alertState","state","alertReducer","handleSubmit","event","preventDefault","trim","handleChangeInputValue","target","value","onSubmit","children","alertText","length","props","fileName","_jsxFileName","lineNumber","columnNumber","className","style","width","marginRight","htmlFor","onChange","type","_c","$RefreshReg$"],"sources":["E:/bem/bemsik/client/todo/src/components/todos/TodoForm/TodoForm.tsx"],"sourcesContent":["import {useDispatch, useSelector} from \"react-redux\";\r\nimport { ChangeEvent, FormEvent, useEffect, useState } from 'react';\r\nimport { createTodo, getTodos, showAlert } from '../../../redux/Actions';\r\nimport {IAlertReducer} from \"../../../types/types\";\r\nimport {Alert} from \"../Alert/alert\";\r\nimport { TodoList } from '../TodoList/TodoList';\r\n\r\nexport const TodoForm = () => {\r\n    const [title, setTitle] = useState<string>(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const alertState = useSelector((state: IAlertReducer) => state.alertReducer)\r\n    useEffect(() => {\r\n        dispatch(getTodos())\r\n    }, )\r\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        if(!title.trim()) {\r\n            dispatch(showAlert('Название дела не может быть пустым', 'warning'))\r\n            return\r\n        }\r\n        dispatch(createTodo(title))\r\n        setTitle(\"\")\r\n    }\r\n\r\n    const handleChangeInputValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(event.target.value)\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {alertState.alertText.length > 0 && <Alert props={alertState}/>}\r\n            <div className=\"mb-3 d-flex align-items-end justify-content-between\">\r\n                <div className=\"form-group\" style={{width: '80%', marginRight: '10px'}}>\r\n                    <label htmlFor=\"\" className=\"form-label\">Введите название дела</label>\r\n                    <input onChange={handleChangeInputValue} type=\"text\" className=\"form-control\"/>\r\n                </div>\r\n                <button className=\"btn btn-success\">Создать</button>\r\n            </div>\r\n            <h2 className=\"pt-3\">Новые дела</h2>\r\n        </form>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}